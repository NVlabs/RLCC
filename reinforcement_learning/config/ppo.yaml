env:
  scenarios:
    - 2_to_1
  envs_per_scenario: 8
  history_length: 4
  omnet:
    simulator_path: ../NVIDIACCSim/sim  # relative to reinforcement_learning dir
    exe_path: ../bin/ccsim_release  #../bin/ccsim_release  # relative to run_path
    config_path: omnetpp.ini
  reward: general
  port_increment: 10
  save_path: '../../reinforcement_learning/output/'  # relative path to NVIDIACCSimSetup/sim/train_default_config/

training:
  max_timesteps: 1000000
  learning_rate: 0.00025
  gradient_clip: .5

agent:
  save_name: ''
  evaluate: False
  agent_type: PPO
  agent_features:
    - action
    - latency_mean_min_ratio
#    - bandwidth
    - cnp_ratio
#    - normalized_remaining_switch_rate
#    - nack_indicator
#    - rtt_rate_signal
    - nack_ratio
#    - latency_inflation
#    - requested_rate
  discount: .99
  linear_lr_decay: False
  ppo:
    action_multiplier_dec: 0.2
    action_multiplier_inc: 0.2
    discrete_actions: False
    action_weights:
      - 0.8
      - 0.95
      - 1
      - 1.05
      - 1.1
      - 1.2
    rollout_length: 64
    rollouts_per_batch: 4
    use_gae: False
    baseline_coeff: .5
    entropy_coeff: .01
    gae_tau: .95
    use_lstm: False
    actor_architecture:
      - 32
      - 16
    critic_architecture:
      - 32
      - 16
    params:
      ppo_ratio_clip: .2
      ppo_batch_size: 4
      ppo_optimization_epochs: 4

logging:
  wandb: False  # Logging using weights and biases
  wandb_run_name: unnamed  # Logging using weights and biases
  min_log_interval: 1024 # The minimum number of iterations before each log occurs
